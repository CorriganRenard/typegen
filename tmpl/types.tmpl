package ty

import (
	"bootstraphost/id"
	"database/sql/driver"
	"time"
)

type {{.StructName}} struct {
{{ range .StructFields }}
  {{ .FieldName }} {{ .FieldType }}  `db:"{{ .NameUnderscore }}" json:"{{ .NameUnderscore }}"`
{{- end }}
}



// UpdateTimeTouched and CreateTimeToucher interfaces implementation
func (o *{{.StructName}}) IDAssign() {
	if o.{{.PrimaryKeyField.FieldName}} == "" {
		o.{{.PrimaryKeyField.FieldName}} = id.Next()
	}
}
func (o *{{.StructName}}) CreateTimeTouch() { o.CreatedAt = Timestamp(time.Now()) }
func (o *{{.StructName}}) UpdateTimeTouch() { o.UpdatedAt = Timestamp(time.Now()) }

// AccessProjectID implements Accessible
func (o *{{.StructName}}) AccessProjectID() string { return o.ProjectID }



{{ range .StructFields }}
{{ if eq .TagValue "json_struct" }}
type {{ .FieldType }} struct {
    {{ if .JSONFields }}
        {{ range .JSONFields }}
            {{ .FieldName }} {{ .FieldType }} `json:"{{ .NameUnderscore }}"`
        {{- end }}
    {{ else }}
            AType string `json:"atype"`
            BType string `json:"btype"`
    {{ end }}
}

func (d *{{ .FieldType }}) Scan(src interface{}) error  { return dbScan(d, src) }
func (d {{ .FieldType }}) Value() (driver.Value, error) { return dbValue(d) }

{{ end }}
{{ end }}

// TODO: ENUMS